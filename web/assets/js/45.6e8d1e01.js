(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{316:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"为什么写这篇文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么写这篇文章"}},[t._v("#")]),t._v(" 为什么写这篇文章")]),t._v(" "),a("ul",[a("li",[t._v("现在的面试要求越来越高了，打开看了看几个BOSS招聘 Node.js 全栈开发的，其中都有一条“了解消息队列，并在项目中应用过”，呜呜呜")]),t._v(" "),a("li",[t._v("后端开发者应该都知道消息队列，但是一些前端开发者可能知道的并不多，但是你们可能好奇"),a("code",[t._v("抢票,商品秒杀")]),t._v("等功能是如何实现的，其实没有多么高大上，看了消息队列就知道了。")])]),t._v(" "),a("h2",{attrs:{id:"文章导图-你能学到"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文章导图-你能学到"}},[t._v("#")]),t._v(" 文章导图(你能学到)")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.xiaogangzai.cn/queue_01.jpg",alt:""}})]),t._v(" "),a("p",[t._v("作者简介：koala，专注完整的 Node.js 技术栈分享，从 JavaScript 到 Node.js,再到后端数据库，祝您成为优秀的高级 Node.js 工程师。【程序员成长指北】作者，Github 博客开源项目 https://github.com/koala-coding/goodBlog")]),t._v(" "),a("h2",{attrs:{id:"什么是消息队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是消息队列"}},[t._v("#")]),t._v(" 什么是消息队列")]),t._v(" "),a("blockquote",[a("p",[t._v("“消息队列”是在消息的传输过程中保存消息的容器。")])]),t._v(" "),a("p",[a("strong",[t._v("个人理解")]),t._v(":我把它分成两个词"),a("code",[t._v("消息")]),t._v("和"),a("code",[t._v("队列")]),t._v("。当一大批客户端同时产生大量的网络请求（"),a("code",[t._v("消息")]),t._v("）时候，服务器的承受能力肯定是有一个限制的。这时候要是有个容器，先让这些消息排队就好了，还好有个叫"),a("code",[t._v("队列")]),t._v("的数据结构，通过"),a("code",[t._v("有队列属性的容器")]),t._v("排队(先进先出)，把消息再传到我们的服务器，压力减小了好多，这个很棒的"),a("code",[t._v("容器")]),t._v("就是消息队列")]),t._v(" "),a("p",[t._v("这段理解中还包含这个两个概念: 客户端->"),a("code",[t._v("生产者")]),t._v("    服务器->"),a("code",[t._v("消费者")]),t._v("\n当有"),a("code",[t._v("消息队列")]),t._v("出现，"),a("code",[t._v("生产者")]),t._v("和"),a("code",[t._v("消费者")]),t._v("是必不可少的两个概念，上面的理解是"),a("code",[t._v("多个生产者")]),t._v("对应"),a("code",[t._v("一个消费者")]),t._v("，当然现实开发中还有"),a("code",[t._v("许多消费者")]),t._v("的情况哦。接下来的文章也会多次提到"),a("code",[t._v("生产-消费模型")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"消息队列优势"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息队列优势"}},[t._v("#")]),t._v(" 消息队列优势")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("应用解耦")])]),t._v(" "),a("p",[t._v("消息队列可以使消费者和生产者直接互不干涉，互不影响，只需要把消息发送到队列即可，而且可独立的扩展或修改两边的处理过程，只要能确保它们遵守同样的接口约定，可以生产者用Node.js实现，消费者用phython实现。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("灵活性和峰值处理能力")])]),t._v(" "),a("p",[t._v("当客户端访问量突然剧增，对服务器的访问已经超过服务所能处理的最大峰值，甚至导致服务器超时负载崩溃，使用消息队列可以解决这个问题，可以通过"),a("code",[t._v("控制消费者的处理速度")]),t._v("和"),a("code",[t._v("生产者可进入消息队列的数量")]),t._v("等来避免峰值问题")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("排序保证")])]),t._v(" "),a("p",[t._v("消息队列可以控制数据处理的顺序，因为消息队列本身使用的是队列这个数据结构，"),a("code",[t._v("FIFO")]),t._v("(先进选出)，在一些场景数据处理的顺序很重要，比如商品下单顺序等。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("异步通信")])]),t._v(" "),a("p",[t._v("消息队列中的有些消息，并不需要立即处理，消息队列提供了异步处理机制，可以把消息放在队列中并不立即处理，需要的时候处理，或者异步慢慢处理，一些不重要的发送短信和邮箱功能可以使用。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("可扩展性")])]),t._v(" "),a("p",[t._v("前面提到了消息队列可以做到"),a("code",[t._v("解耦")]),t._v("，如果我们想增强消息入队和出队的处理频率，很简单，并不需要改变代码中任何内容，可以直接对消息队列修改一些配置即可，比如我们想限制每次发送给消费者的消息条数等。")])])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("有优势定有它现实的应用场景，文章后面会针对优势讲它们对应的应用场景。")])])]),t._v(" "),a("h3",{attrs:{id:"消息队列的类型介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息队列的类型介绍"}},[t._v("#")]),t._v(" 消息队列的类型介绍")]),t._v(" "),a("h4",{attrs:{id:"介绍几款目前市场上主流的消息队列-课外知识，可忽略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍几款目前市场上主流的消息队列-课外知识，可忽略"}},[t._v("#")]),t._v(" 介绍几款目前市场上主流的消息队列(课外知识，可忽略)")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Kafka")]),t._v("：是由 Apache 软件基金会开发的一个开源流处理平台，由 Scala 和 Java 编写，是一种高吞吐量的分布式发布订阅消息系统，支持单机每秒百万并发。另外，Kafka 的定位主要在日志等方面， 因为Kafka 设计的初衷就是"),a("code",[t._v("处理日志")]),t._v("的，可以看做是一个"),a("code",[t._v("日志（消息）系统")]),t._v("一个重要组件，针对性很强。0.8 版本开始支持复制，不支持事物，因此对消息的重复、丢失、错误没有严格的要求。")]),t._v(" "),a("li",[a("strong",[t._v("RocketMQ")]),t._v("：阿里开源的消息中间件，是一款低延迟、高可靠、可伸缩、易于使用的消息中间件，思路起源于 Kafka。最大的问题商业版收费，有些功能不开放。")]),t._v(" "),a("li",[a("strong",[t._v("RabbitMQ")]),t._v("：由 Erlang（有着和原生 Socket 一样低的延迟）语言开发基于 AMQP 协议的开源消息队列系统。能保证消息的可靠性、稳定性、安全性。"),a("code",[t._v("高并发")]),t._v("\n的特性，毋庸置疑，RabbitMQ 最高，原因是它的实现语言是天生具备高并发高可用的erlang 语言，天生的"),a("code",[t._v("分布式")]),t._v("优势。")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("说明")]),t._v("：\n"),a("strong",[t._v("本文主要以RabbitMQ讲解，较为常见。")]),t._v(" "),a("strong",[t._v("个人认为这几种消息队列中间件能实现的功能，通过 redis 也都能实现，思想。")])])]),t._v(" "),a("h2",{attrs:{id:"初识消息队列-消息队列在node-js中的简单应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初识消息队列-消息队列在node-js中的简单应用"}},[t._v("#")]),t._v(" 初识消息队列(消息队列在node.js中的简单应用)")]),t._v(" "),a("h3",{attrs:{id:"rabbitmq基本安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq基本安装"}},[t._v("#")]),t._v(" Rabbitmq基本安装")]),t._v(" "),a("h4",{attrs:{id:"mac版安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mac版安装"}},[t._v("#")]),t._v(" Mac版安装")]),t._v(" "),a("p",[t._v("直接通过 HomeBrew 安装，执行以下命令")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("brew install rabbitmq\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"启动-rabbitmq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动-rabbitmq"}},[t._v("#")]),t._v(" 启动 rabbitmq")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("进入安装目录\n$ /usr/local/Cellar/rabbitmq/3.7.8\n启动\n$ sbin/rabbitmq-server\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("浏览器输入 http://localhost:15672/#/ 默认用户名密码 guest")]),t._v(" "),a("h4",{attrs:{id:"安装后的基本示意图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装后的基本示意图"}},[t._v("#")]),t._v(" 安装后的基本示意图")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.xiaogangzai.cn/queue_02.jpg",alt:""}})]),t._v(" "),a("p",[t._v("可视化界面可模块功能介绍:")]),t._v(" "),a("hr"),t._v(" "),a("blockquote",[a("p",[t._v("其他系统安装请自行网上搜索")])]),t._v(" "),a("h4",{attrs:{id:"几个端口区别说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#几个端口区别说明"}},[t._v("#")]),t._v(" 几个端口区别说明")]),t._v(" "),a("p",[t._v("5672：通信默认端口号\n15672：管理控制台默认端口号\n25672：集群通信端口号\n注意: 阿里云 ECS 服务器如果出现 RabbitMQ 安装成功，外网不能访问是因为安全组的问题没有开放端口 解决方案")]),t._v(" "),a("h4",{attrs:{id:"rabbitmq安装后的基本命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq安装后的基本命令"}},[t._v("#")]),t._v(" Rabbitmq安装后的基本命令")]),t._v(" "),a("p",[t._v("以下列举一些在终端常用的操作命令")]),t._v(" "),a("ul",[a("li",[t._v("whereis rabbitmq：查看 rabbitmq 安装位置")]),t._v(" "),a("li",[t._v("rabbitmqctl start_app：启动应用")]),t._v(" "),a("li",[t._v("whereis erlang：查看erlang安装位置")]),t._v(" "),a("li",[t._v("rabbitmqctl start_app：启动应用")]),t._v(" "),a("li",[t._v("rabbitmqctl stop_app：关闭应用")]),t._v(" "),a("li",[t._v("rabbitmqctl status：节点状态")]),t._v(" "),a("li",[t._v("rabbitmqctl add_user username password：添加用户")]),t._v(" "),a("li",[t._v("rabbitmqctl list_users：列出所有用户")]),t._v(" "),a("li",[t._v("rabbitmqctl delete_user username：删除用户")]),t._v(" "),a("li",[t._v("rabbitmqctl add_vhost vhostpath：创建虚拟主机")]),t._v(" "),a("li",[t._v("rabbitmqctl list_vhosts：列出所有虚拟主机")]),t._v(" "),a("li",[t._v("rabbitmqctl list_queues：查看所有队列")]),t._v(" "),a("li",[t._v("rabbitmqctl -p vhostpath purge_queue blue：清除队列里消息")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("注意")]),t._v(":以上终端所有命令,需要进入到rabbitmqctl的sbin目录下执行rabbitmqctl命令才有用，否则会报错：\n"),a("img",{attrs:{src:"http://img.xiaogangzai.cn/queue_03.jpg",alt:""}})])]),t._v(" "),a("h3",{attrs:{id:"node-js实现一个简单的-helloworld-消息队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js实现一个简单的-helloworld-消息队列"}},[t._v("#")]),t._v(" Node.js实现一个简单的 HelloWorld 消息队列")]),t._v(" "),a("p",[t._v("画一张基本的图，HelloWorld 消息队列的图片，把下面几个概念都画进去。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("看这段代码前先说几个概念")]),t._v(" "),a("ul",[a("li",[t._v("生产者 ：生产消息的")]),t._v(" "),a("li",[t._v("消费者 ：接收消息的")]),t._v(" "),a("li",[t._v("通道 channel：建立连接后，会获取一个 channel 通道")]),t._v(" "),a("li",[t._v("exchange ：交换机，消息需要先发送到 exchange 交换机，也可以说是第一步存储消息的地方(交换机会有很多类型，后面会详细说)。")]),t._v(" "),a("li",[t._v("消息队列 : 到达消费者前一刻存储消息的地方,exchange 交换机会把消息传递到此")]),t._v(" "),a("li",[t._v("ack回执：收到消息后确认消息已经消费的应答")])]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"amqplib模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#amqplib模块"}},[t._v("#")]),t._v(" amqplib模块")]),t._v(" "),a("p",[t._v("推荐一个 npm 模块"),a("code",[t._v("amqplib")]),t._v("。")]),t._v(" "),a("p",[t._v("Github: https://github.com/squaremo/amqp.node")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ npm install amqplib\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h4",{attrs:{id:"生产者代码-product-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生产者代码-product-js"}},[t._v("#")]),t._v(" 生产者代码 product.js")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" amqp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'amqplib'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("product")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("params")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.创建链接对象")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" connect "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" amqp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'amqp://localhost:5672'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 创建链接对象")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" connection "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" amqp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'amqp://localhost:5672'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 获取通道")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" channel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" connection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createChannel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 声明参数")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" routingKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'helloKoalaQueue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" msg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello koala'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4. 发送消息")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("publish")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" routingKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" 第")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("条消息")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5. 关闭通道")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6. 关闭连接")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" connect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("product")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br")])]),a("h4",{attrs:{id:"生产者代码解释与运行结果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生产者代码解释与运行结果"}},[t._v("#")]),t._v(" 生产者代码解释与运行结果")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("执行 node product"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("代码注释中已经把基本的流程讲解了，但是我刚开始看的时候还有疑问，我想很多小伙伴也会有疑问，说明下:")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("疑问1")])]),t._v(" "),a("p",[t._v("前面提到过交换机这个名词，"),a("code",[t._v("生产者")]),t._v("发消息的时候必须要指定一个 exchange，若不指定 exchange（为空）会默认指向 AMQP default 交换机，AMQP default 路由规则是根据 routingKey 和 mq 上有没有相同名字的队列进行匹配路由。上面这段代码就是默认指定的交换机。不同类型交换机详细讲解请往下看。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("疑问2")])]),t._v(" "),a("p",[t._v("生产者发送消息后，消息是发送到交换机exchange，但是这时候会创建队列吗？")]),t._v(" "),a("p",[t._v("答案：代码中我们声明的是路由是routingKey，但是它并没有创建helloKoalaQueue 消息队列，消息只会发送到交exchange交换机。\n运行代码后看队列截图可以证明这一点:")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("说明1")])]),t._v(" "),a("p",[t._v("生产者发送消息后，注意关闭通道和连接，只要消息发送成功后，连接就可以关闭了，消费者用任何语言去获取消息都可以，这也证明了消息队列优秀"),a("code",[t._v("解耦")]),t._v("的特性")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("说明2")])]),t._v(" "),a("p",[t._v("可以多次执行"),a("code",[t._v("node product.js")]),t._v("生产者代码,消息会堆积到"),a("code",[t._v("交换机exchange")]),t._v("中，并不会覆盖，如果已执行过消费者并且确认了对应的"),a("code",[t._v("消息队列")]),t._v("，消息会从"),a("code",[t._v("exchange交换机")]),t._v("发送到"),a("code",[t._v("消息队列")]),t._v("，并存入到"),a("code",[t._v("消息队列")]),t._v("，等待"),a("code",[t._v("消费者")]),t._v("消费")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.xiaogangzai.cn/queue_04.jpg",alt:""}})])])]),t._v(" "),a("h4",{attrs:{id:"消费者代码-consumer-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消费者代码-consumer-js"}},[t._v("#")]),t._v(" 消费者代码 consumer.js")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构建消费者")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" amqp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'amqplib'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("consumer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 创建链接对象")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" connection "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" amqp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'amqp://localhost:5672'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 获取通道")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" channel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" connection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createChannel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 声明参数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" queueName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'helloKoalaQueue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4. 声明队列，交换机默认为 AMQP default")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queueName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5. 消费")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("consume")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queueName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("msg")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Consumer：'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ack")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("consumer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br")])]),a("h4",{attrs:{id:"生产者代码解释与运行结果-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生产者代码解释与运行结果-2"}},[t._v("#")]),t._v(" 生产者代码解释与运行结果")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("执行 node consumer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[a("p",[a("strong",[t._v("运行后的执行结果")])]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.xiaogangzai.cn/queue_05.jpg",alt:""}})])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("说明1")])]),t._v(" "),a("p",[t._v("这时候我改变代码中的队列名称为"),a("code",[t._v("helloKoalaQueueHaHa")]),t._v(",这时候去看Rabbitmq可视化界面中，队列模块，创建了这个队列")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.xiaogangzai.cn/queue_06.jpg",alt:""}})]),t._v(" "),a("p",[t._v("看到这里再次证明了消息队列优秀的"),a("code",[t._v("解耦特性")]),t._v("，"),a("code",[t._v("消费者和生产者模型")]),t._v("之间没有任何联系，再次创建这个"),a("code",[t._v("helloKoalaQueueHaHa")]),t._v("路由名称的生产者，"),a("code",[t._v("消费者")]),t._v("也会正常消费，并且会打印消息，大家可以实际操作试一下。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("说明2")])]),t._v(" "),a("p",[t._v("这时候我改变代码中的队列名称为"),a("code",[t._v("helloKoalaQueueHaHa")]),t._v(",这时候去看Rabbitmq可视化界面中，队列模块，创建了这个队列")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.xiaogangzai.cn/queue_06.jpg",alt:""}})]),t._v(" "),a("p",[t._v("看到这里又再次证明了消息队列优秀的"),a("code",[t._v("解耦特性")]),t._v("，"),a("code",[t._v("消费者和生产者模型")]),t._v("之间没有任何联系，再次创建这个"),a("code",[t._v("helloKoalaQueueHaHa")]),t._v("路由名称的生产者，"),a("code",[t._v("消费者")]),t._v("也会正常消费，并且会打印消息，大家可以实际操作试一下。")])])]),t._v(" "),a("h3",{attrs:{id:"如何释放掉消息队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何释放掉消息队列"}},[t._v("#")]),t._v(" 如何释放掉消息队列")]),t._v(" "),a("h4",{attrs:{id:"可视化界面中直接删除掉消息队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可视化界面中直接删除掉消息队列"}},[t._v("#")]),t._v(" 可视化界面中直接删除掉消息队列")]),t._v(" "),a("ol",[a("li",[t._v("访问http://{rabbitmq安装IP}:15672，登录。")]),t._v(" "),a("li",[t._v("点击queues，这里可以看到你创建的所有的Queue，")]),t._v(" "),a("li",[t._v("选中某一个Queue，然后会进入一个列表界面，下方有个Delete按钮，确认 Queue删除队列/Purge Message清除消息即可。")])]),t._v(" "),a("p",[a("strong",[t._v("弊端：")]),t._v("\n这样只能一个队列一个队列的删除，如果队列中的消息过多就会特别慢。")]),t._v(" "),a("h4",{attrs:{id:"通过代码实现消息队列释放-删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过代码实现消息队列释放-删除"}},[t._v("#")]),t._v(" 通过代码实现消息队列释放(删除)")]),t._v(" "),a("h2",{attrs:{id:"消息队列交换机讲解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息队列交换机讲解"}},[t._v("#")]),t._v(" 消息队列交换机讲解")]),t._v(" "),a("p",[t._v("先记住一句话")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("生产者发消息的时候必须指定一个 exchange，否则消息无法直接到达消息队列，Exchange将消息路由到一个或多个Queue中（或者丢弃）")])])]),t._v(" "),a("p",[t._v("然后开始本章节交换机的讲解")]),t._v(" "),a("p",[t._v("若不指定 exchange（为空）会默认指向 AMQP default 交换机，AMQP default 路由规则是根据 routingKey 和 mq 上有没有相同名字的队列进行匹配路由。")]),t._v(" "),a("h3",{attrs:{id:"交换机的种类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#交换机的种类"}},[t._v("#")]),t._v(" 交换机的种类")]),t._v(" "),a("p",[t._v("常用的四种类型")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("fanout")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("direct")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("topic")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("headers")])])])]),t._v(" "),a("p",[t._v("不管是哪一种类型的交换机，都有一个绑定binding的操作，只不过根据不同的交换机类型有不同的路由绑定策略。不同类型做的下图红色框框中的事。")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.xiaogangzai.cn/queue_07.jpg",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"fanout（中文翻译-广播）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fanout（中文翻译-广播）"}},[t._v("#")]),t._v(" fanout（中文翻译 广播）")]),t._v(" "),a("p",[t._v("fanout类型的Exchange路由规则非常简单，它会把所有发送到该Exchange的消息路由到所有与它绑定的Queue中，不需要设置路由键。")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.xiaogangzai.cn/queue_08.jpg",alt:""}}),t._v("\n上图中，上图中，生产者（Producter）发送到Exchange（X）的所有消息都会路由到图中的两个Queue，并最终被两个消费者（consumer1与consumer2）消费。")]),t._v(" "),a("blockquote",[a("p",[t._v("说明:所有消息都会路由到两个Queue中，是两个消费者都可以收到全部的完全相同的消息吗? 答案是的，两个消费者收到的队列消息正常应该是完全相同的。这种类型常用于广播类型的需求，或者也可以消费者1记录日志 ，消费者2打印日志")])]),t._v(" "),a("p",[a("strong",[t._v("对应代码实现")]),t._v("：")]),t._v(" "),a("p",[t._v("生产者:")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" amqp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'amqplib'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("producer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建链接对象")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" connection "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" amqp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'amqp://localhost:5672'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取通道")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" channel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" connection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createChannel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明参数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" exchangeName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fanout_koala_exchange'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" routingKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" msg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello koala'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 交换机")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertExchange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exchangeName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fanout'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        durable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送消息")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("publish")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exchangeName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" routingKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关闭链接")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" connection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("producer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br")])]),a("p",[t._v("消费者：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" amqp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'amqplib'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("consumer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建链接对象")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" connection "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" amqp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'amqp://localhost:5672'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取通道")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" channel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" connection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createChannel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明参数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" exchangeName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fanout_koala_exchange'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" queueName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fanout_kaola_queue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" routingKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明一个交换机")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertExchange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exchangeName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fanout'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" durable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明一个队列")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queueName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 绑定关系（队列、交换机、路由键）")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bindQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queueName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exchangeName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" routingKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 消费")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("consume")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queueName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("msg")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Consumer：'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ack")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'消费端启动成功！'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("consumer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br")])]),a("p",[t._v("注意：其他类型代码已经放到 github，地址："),a("strong",[t._v("https://github.com/koala-coding/simple_rabbitmq")]),t._v("  欢迎 "),a("strong",[t._v("star")]),t._v(" 交流。")]),t._v(" "),a("h4",{attrs:{id:"direct"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#direct"}},[t._v("#")]),t._v(" direct")]),t._v(" "),a("p",[t._v("direct 把消息路由到那些 binding key与 routing key 完全匹配的 Queue中。")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.xiaogangzai.cn/queue_09.jpg",alt:""}})]),t._v(" "),a("p",[t._v("以上图的配置为例，我们以 routingKey=”error” 发送消息到Exchange，则消息会路由到 amq1 和 amq2；如果我们以 routingKey=”info” 或 routingKey=”warning” 来发送消息，则消息只会路由到 Queue2。如果我们以其他 routingKey 发送消息，则消息不会路由到这两个 Queue 中。")]),t._v(" "),a("h4",{attrs:{id:"topic"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#topic"}},[t._v("#")]),t._v(" topic")]),t._v(" "),a("p",[t._v("生产者指定 RoutingKey 消息根据消费端指定的队列通过模糊匹配的方式进行相应转发，两种通配符模式：\n#：可匹配一个或多个关键字\n*：只能匹配一个关键字")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.xiaogangzai.cn/queue_10.jpg",alt:""}})]),t._v(" "),a("h4",{attrs:{id:"headers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#headers"}},[t._v("#")]),t._v(" headers")]),t._v(" "),a("p",[t._v("header exchange(头交换机)和主题交换机有点相似，但是不同于主题交换机的路由是基于路由键，头交换机的路由值基于消息的 header 数据。\n主题交换机路由键只有是字符串,而头交换机可以是整型和哈希值\nheader Exchange 类型用的比较少，可以自行 google 了解。")]),t._v(" "),a("h2",{attrs:{id:"消息队列的思考与深入探索"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息队列的思考与深入探索"}},[t._v("#")]),t._v(" 消息队列的思考与深入探索")]),t._v(" "),a("h3",{attrs:{id:"消息队列实现rpc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息队列实现rpc"}},[t._v("#")]),t._v(" 消息队列实现rpc")]),t._v(" "),a("p",[t._v("（本小段内容来源网上，参考文章说明）")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.xiaogangzai.cn/queue_11.jpg",alt:""}}),t._v("\nRPC 远程调用服务端的方法，使用 MQ 可以实现 RPC 的异步调用，基于 Direct 交换机实现")]),t._v(" "),a("ol",[a("li",[t._v("客户端即是生产者又是消费者，向 RPC 请求队列发送 RPC 调用消息，同时监听 RPC 响应队列")]),t._v(" "),a("li",[t._v("服务端监听RPC请求队列，收到消息后执行服务端的方法")]),t._v(" "),a("li",[t._v("服务端将方法执行后的结果发送到RPC响应队列")])]),t._v(" "),a("p",[t._v("（注意，这里只是提一下 RPC 这个知识，因为单单一个RPC一篇文章都不一定说说完，有兴趣的可以用队列尝试一下RPC）")]),t._v(" "),a("h3",{attrs:{id:"是否有消息持久化的必要？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#是否有消息持久化的必要？"}},[t._v("#")]),t._v(" 是否有"),a("strong",[t._v("消息持久化")]),t._v("的必要？")]),t._v(" "),a("p",[a("code",[t._v("消息队列")]),t._v("是存在内存中的，如果出现问题挂掉,消息队列中的消息会丢失。所以对于一些需求非常有持久化的必要！RabbitMQ 可以开启持久化。不同开发语言都可以设置持久化参数。")]),t._v(" "),a("p",[t._v("这里以Node.js为例子，其他语言可以自行搜索")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertExchange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exchangeName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'direct'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" durable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意其中的{ durable: true }，这事对交换机持久化，还有其他的几种持久化方式")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("同时推荐一篇不错的写持久化的文章:\nhttps://juejin.im/post/5d6f6b0ae51d45621512add0")]),t._v(" "),a("h3",{attrs:{id:"消费者完成后是否有消息应答的必要？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消费者完成后是否有消息应答的必要？"}},[t._v("#")]),t._v(" 消费者完成后是否有"),a("strong",[t._v("消息应答")]),t._v("的必要？")]),t._v(" "),a("p",[t._v("消息应答简单的解释就是"),a("code",[t._v("消费者")]),t._v("完成了消费后，通知一下消息队列。")]),t._v(" "),a("p",[t._v("我觉得这个配置是有必要打开的，消费者完成消息队列中的任务，消费者可能中途失败或者挂掉，一旦 RabbitMQ 发送一个消息给消费者然后便迅速将该消息从"),a("code",[t._v("消息队列内存")]),t._v("中移除,这种情况下，消费者对应工作进程失败或者挂掉后，那该进程正在处理的消息也将丢失。而且，也将丢失所有发送给该进程的未被处理的消息。")]),t._v(" "),a("p",[t._v("为了确保消息永不丢失，RabbitMQ 支持消息应答机制。当消息被接受，处理之后一条应答便会从消费者回传至发送方，然后RabbitMQ将其删除。")]),t._v(" "),a("p",[t._v("如果某个消费者挂掉（信道、链接关闭或者 tcp 链接丢失）且没有发送 ack 应答，RabbitMQ 会认为该消息没有被处理完全然后会将其重新放置到队列中。通过这种方式你就可以确保消息永不丢失，甚至某个工作进程偶然挂掉的情况。")]),t._v(" "),a("p",[t._v("默认情况下消息应答是关闭的。是时候使用 false（auto-ack配置项）参数将其开启了")]),t._v(" "),a("p",[t._v("这里以 Node.js 为例子，其他语言可以自行搜索")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 消费者消费时候的代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("consume")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queueName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("msg")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'koala：'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//... 这里可以放业务逻辑处理的代码，消费者完成后发送回执应答")]),t._v("\n    channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ack")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 消息应答")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" noAck"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h3",{attrs:{id:"如何实现公平调度？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何实现公平调度？"}},[t._v("#")]),t._v(" 如何实现公平调度？")]),t._v(" "),a("p",[t._v("可以将"),a("code",[t._v("prefetch count")]),t._v("项的值配置为1，这将会指示 RabbitMQ 在同一时间不要发送超过一条消息给每个消费者。换句话说，直到消息被处理和应答之前都不会发送给该消费者任何消息。取而代之的是，它将会发送消息至下一个比较闲的消费者或工作进程。")]),t._v(" "),a("p",[t._v("这里以 Node.js 为例子，amqplib 库对于限流实现提供的接口方法 prefetch。")]),t._v(" "),a("p",[a("strong",[t._v("prefetch 参数说明")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("count：每次推送给消费端 N 条消息数目，如果这 N 条消息没有被ack，生产端将不会再次推送直到这 N 条消息被消费。")]),t._v(" "),a("li",[t._v("global：在哪个级别上做限制，ture 为 channel 上做限制，false 为消费端上做限制，默认为 false。")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建消费者的时候 限流参数设置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("prefetch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"如何实现一个交换机给多个消费者依次发送消息，选择那种交换机？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何实现一个交换机给多个消费者依次发送消息，选择那种交换机？"}},[t._v("#")]),t._v(" 如何实现一个交换机给多个消费者依次发送消息，选择那种交换机？")]),t._v(" "),a("p",[t._v("如果一个生产者，两个消费者，发放消息，我想要的队列先给消费者1发，发完消费者1发消费者2，这样有顺序的交互发送，应该现在哪一种交换机呢？注意是交互，看完之后想一下？还有消费者完成后有没有手动回调消息队列完成的必要？消息持久化有必要没，持久化有什么好处？")]),t._v(" "),a("p",[t._v("(看完消息队列的消息传递，你会有疑问管道中的消息(生产者)是怎么被消费者消费的  放入队列，然后从队列被取出)")]),t._v(" "),a("h2",{attrs:{id:"消息队列应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息队列应用场景"}},[t._v("#")]),t._v(" 消息队列应用场景")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("双十一商品秒杀/抢票功能实现")])]),t._v(" "),a("p",[t._v("我们在双11的时候，当我们凌晨大量的秒杀和抢购商品，然后去结算的时候，就会发现，界面会提醒我们，让我们稍等，以及一些友好的图片文字提醒。而不是像前几年的时代，动不动就页面卡死，报错等来呈现给用户。")]),t._v(" "),a("p",[a("strong",[t._v("用一张图来解释消息队列在秒杀抢票等场景的使用：")]),t._v("\n（说明：往下看之前，如果你做过电商类秒杀，可以想想你是怎么实现的，我们可以一起讨论哦。这里只是想说下消息队列的作用，并不是最终优化的结果，比如用redis控制总缓存等）")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://img.xiaogangzai.cn/queue_12.jpg",alt:""}}),t._v("\n这里在生成订单时候，不需要直接操作数据库 IO ，预扣库存。先扣除了库存，保证不超卖，然后异步生成用户订单，这里用到一次即时"),a("code",[t._v("消费队列")]),t._v("，这样响应给用户的速度就会快很多；而且还要保证不少卖，用户拿到了订单，不支付怎么办？我们都知道现在订单都有有效期，再使用一个"),a("code",[t._v("消息队列")]),t._v("，用于判断订单支付超时，比如说用户五分钟内不支付，订单就失效了，订单一旦失效，就会加入新的库存。这也是现在很多网上零售企业保证商品不少卖采用的方案。订单量比较少的情况下，生成订单非常快，用户几乎不用排队。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("积分兑换(积分可用于多平台)")])]),t._v(" "),a("p",[t._v("积分兑换模块，有一个公司多个部门都要用到这个模块，这时候就可以通过消息队列解耦这个特性来实现。\n各部门系统做各部门的事，但是他们都可以用这个积分系统进行商品的兑换等。其他模块与积分模块完全解耦。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("发送邮件，用户大数据分析等 同步变异步功能实现")])]),t._v(" "),a("p",[t._v("这个功能要说的比较多，从一个平台的用户注册开始。")]),t._v(" "),a("ul",[a("li",[t._v("用户注册")]),t._v(" "),a("li",[t._v("用户注册选择几个兴趣标签，这时候需要根据用户的属性，用户分析，计算出推荐内容")]),t._v(" "),a("li",[t._v("注册后可能需要发送邮件给用户")]),t._v(" "),a("li",[t._v("发送给用户一个包含操作指南的系统通知")]),t._v(" "),a("li",[t._v("等等")])]),t._v(" "),a("p",[a("strong",[t._v("正常情况注册，不出现高并发")]),t._v("：")]),t._v(" "),a("p",[t._v("对于用户来说，他就是想注册用一下这个软件，只要服务端将他的账户信息存到数据库中他便可以登录上去做他想做的事情了。用户并不care这些事，服务端就可以把其他的操作放入对应的"),a("code",[t._v("消息队列")]),t._v("中然后马上返回用户结果，由消息队列"),a("code",[t._v("异步")]),t._v("的进行这些操作。")]),t._v(" "),a("p",[a("strong",[t._v("假如有大量的用户注册，发生了高并发")]),t._v("：")]),t._v(" "),a("p",[t._v("邮件接口承受不住，或是分析信息时的大量计算使 cpu 满载，这将会出现虽然用户数据记录很快的添加到数据库中了，但是却卡在发邮件或分析信息时的情况，导致请求的响应时间大幅增长，甚至出现超时，这就有点不划算了。面对这种情况一般也是将这些操作放入消息队列（生产者消费者模型），消息队列慢慢的进行处理，同时可以很快的完成注册请求，不会影响用户使用其他功能。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("基于RabbitMQ的Node.js与Phython或其他语言实现通信")])]),t._v(" "),a("p",[t._v("这里也是利用了 RabbitMQ 的解耦特性，不仅仅可以与 Phython，还可以与其他很多语言通信，就不具体说了。")])])]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[a("strong",[t._v("亲，别只看，你试试呀")]),t._v("！直接开启服务，装个 RabbitMQ，挺有意思的，就算一个 HelloWorld 也能尝试出很多内容。而且本文说的很多内容都可以用 redis 来实现，也可以去看下我的 redis 文章。顺便说一句设计模式和数据结构是两个好东西，越来越能感觉到。")]),t._v(" "),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),a("p",[t._v("https://www.cnblogs.com/baidawei/p/9172433.html")]),t._v(" "),a("p",[t._v("https://www.sojson.com/blog/48.html")]),t._v(" "),a("p",[t._v("https://www.zhihu.com/question/34243607/answer/58314162")]),t._v(" "),a("p",[t._v("https://bbs.csdn.net/topics/392169691?page=1")]),t._v(" "),a("p",[t._v("http://www.imooc.com/article/293742")]),t._v(" "),a("p",[t._v("https://mp.weixin.qq.com/s/wTkwJXlNr5CaI7uRntJ42A")]),t._v(" "),a("h2",{attrs:{id:"node系列原创文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node系列原创文章"}},[t._v("#")]),t._v(" Node系列原创文章")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/post/5d43017be51d4561f40adcf9",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解Node.js 中的进程与线程\n"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/post/5d25ce36f265da1ba84ab97a",target:"_blank",rel:"noopener noreferrer"}},[t._v("想学Node.js，stream先有必要搞清楚\n"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/post/5d5639c7e51d453b5c1218b4",target:"_blank",rel:"noopener noreferrer"}},[t._v("require时，exports和module.exports的区别你真的懂吗"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/post/5d69eef7f265da03f12e70a5",target:"_blank",rel:"noopener noreferrer"}},[t._v("源码解读一文彻底搞懂Events模块\n"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/post/5d3f1664e51d4561a34618c1",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node.js 高级进阶之 fs 文件模块学习\n"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"关注我"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关注我"}},[t._v("#")]),t._v(" 关注我")]),t._v(" "),a("ul",[a("li",[t._v("欢迎加我微信(coder_qi)，拉你进技术群，长期交流学习...")]),t._v(" "),a("li",[t._v("欢迎关注「程序员成长指北」,一个用心帮助你成长的公众号...\n"),a("img",{attrs:{src:"http://img.xiaogangzai.cn/leading.png",alt:""}})])])])}),[],!1,null,null,null);s.default=e.exports}}]);